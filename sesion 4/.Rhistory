# Definir el directorio de trabajo.
citation()
demo("colors","grDevices")
#===============================================================================
# R trabaja con los siguientes operadores lÃ³gicos: menor o
# DIRECTORIO DE TRABAJO.
#===============================================================================
getwd()
# Ejercicio: Realizar algunas operaciones matemÃ¡ticas.
3+sqrt(2)
# DIRECTORIO DE TRABAJO.
#===============================================================================
getwd()
setwd("C:/Users/destok/Curso R")
3+sqrt(2)
roudnt(0.23-exp(5),2)
round(0.23-exp(5),2)
getwd()
getwd()
trunc(5*1/7)
abs(-25)/6
125%%6
125%%6
125%%6
125%%6
125%/%6
2==3
exp(3)!=abs(3)
2==3
a <-2
b <- sqrt(0.25)
c <- runif(1,0,5) #1 numero aleatorio 2, limite inf, limite sup
name <- "Felipe"; name
x <- TRUE;X
a <-2
b <- sqrt(0.25)
c <- runif(1,0,5) #1 numero aleatorio 2, limite inf, limite sup
name <- "Felipe"; name
x <- TRUE;x
c <- runif(1,0,5) #1 numero aleatorio 2, limite inf, limite sup
c <- runif(1,0,5) #1 numero aleatorio 2, limite inf, limite sup
c <- runif(1,0,5)
c <- runif(1,0,5)
c <- runif(1,0,5); c
name <- "Felipe"; name
a<- b+c; a
f <- round((b+c)/a,3);F
f <- round((b+c)/a,3);f
f <- round((b+exp(c))/a,3);f
f <- round((b+exp(c))/a,3);f
f <- round((b+exp(c))/a,3);f
f <- round((2*b+exp(c))/a,3);f
f <- round((2*b+exp(c))/a,3);f
ls(pat = "a")
class(a)
class(name)
class(x)
rm(list = ls())
v_num = c(1,2,7,4,5,11)
v_en = c(1L,3L,5L)
v_num = c(1,2,7,4,5,11)
class(v_en)
#Crear un vector entero.
v_en = c(1L,3L,5L)
class(v_en)
#Crear un vector lógico
v_car = c("tito","valentina")
class(v_car)
v_log = c(T,F,T,F,T)
class(v_log)
is.character(v_num)
is.integer(v_en)
x1[3]
x1[c(3,5)]
x1 = c(12,13,14,15,16,11,12,13,14)
x1[3]
x1[c(3,5)]
x[x1>13]
x1[x1>13]
x1 != 12
x1[x1 != 12]
x2 = seq(1:10)
x3 = seq(1,25, by=3)
x3
x4 = rep(1,5)
x4
x5 = rep(c(1,6),6)
x5
x5 = rep(c(1,2),6)
x5
x6 = c(2,3,4,NA,NA,11)
is.na(6)
is.na(6)
is.na(x6)
x6[!is.na(x6)]
[!is.na(x6)]
!is.na(x6)
x7 = factor(c("O","O","B","AB","B","A","AB"))
class(x7)
lavels (x7)
levels (x7)
summary (x7)
summary (x5)
summary (x1)
levels(x1)
A = matrix(1:6);
A = matrix(1:6);A
B = matrix(1:6,nrow=2);B
B = matrix(1:6,nrow=3);B
C = matrix(1:6,nrow=2,byrow=T);C
A[0,0]
A[0;0]
A[1,1]
A[1,5]
A[2,3]
C[2,3]
C[,1]
C = matrix(1:6,nrow=2,byrow=T);C
C[,1]
C[1,]
rowname(C) = c("s1","s2")
colname(C) = c("v1","v2","v3")
source('C:/Users/felipe/Desktop/Curso R/Sesion2_Estudiante.R', encoding = 'UTF-8', echo=TRUE)
rownames(C) = c("s1","s2")
colnames(C) = c("v1","v2","v3")
rm(list = ls()) # limpiar valiables
A = matrix(1:6);A
B = matrix(1:6,nrow=2);B
C = matrix(1:6,nrow=2,byrow=T);C
#Ejercicio: Extaer elementos de una matriz
C[2,3]
C[,1]
C[1,]
rownames(C) = c("s1","s2")
colnames(C) = c("v1","v2","v3")
C
dim(C)
colnames(C)
rownames(C)
mode(C)
length(C)
is.matrix(C)
library(dplyr)
library(magrittr)
setwd("C:/Users/felipe/Desktop/Curso R/sesion 4")
library(readxl)
Estudiantes1 <- read_excel("Estudiantes1.xlsx")
Estudiantes2 = Estudiantes1  %>% separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&")
Estudiantes1 <- read_excel("Estudiantes1.xlsx")
Estudiantes1
Estudiantes2 = Estudiantes1  %>% separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&")
library(tidyverse)
library(dplyr) #funcion mutate
library(magrittr) #
Estudiantes2 = Estudiantes1  %>% separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&")
Estudiantes2 = Estudiantes2  %>% separate("Estudiante", c("Nombre","Apellido"),sep=" ")
Estudiantes2 = Estudiantes2 %>% unite(Grupo_tema,7:8,sep = "_")
Estudiantes2
Exportacion2$Taller1 = as.numeric(Estudiantes2$Taller1)
Exportacion2$Taller1 = as.numeric(Estudiantes2$Taller1)
Exportacion2$Taller1 = as.numeric(Exportacion2$Taller1)
Exportacion2
Exportacion2 = Exportacion  %>% separate("Zona", c("Departamento","Ciudad"),sep="_")
Exportacion <- read_excel("Exportacion.xlsx")
View(Exportacion)
Exportacion2 = Exportacion  %>% separate("Zona", c("Departamento","Ciudad"),sep="_")
Exportacion2 = Exportacion2 %>% unite(Registro_Tipo,5:6,sep = "_")
Exportacion3 = Exportacion2 %>% gather(Trimestre,Unidades,3:4)
Exportacion3 = Exportacion2 %>% gather(Trimestre,Unidades,3:4)
Exportacion3 = Exportacion3 %>% mutate(Trimestre= gsub("TrimestreI","I",Trimestre),
Trimestre = gsub("TrimestreII","II",Trimestre))
Exportacion3
Exportacion3$Unidades = as.numeric(Exportacion2$Unidades)
Estudiantes1
Exportacion2
Exportacion2$Taller1 = as.numeric(Exportacion2$Taller2)
Exportacion2 = Estudiantes1  %>% separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&")
Exportacion2
Exportacion2$Taller1 = as.numeric(Exportacion2$Taller1)
str(Exportacion2$Taller1)
Exportacion2$Taller2 = as.numeric(Exportacion2$Taller2)
E2 = Estudiante1 %>%  separate(separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&"))%>%
separate("Estudiante",c("Nombre","Apellido"),sep=" ")%>% unite(Grupo_tema,7:8,sep = "_")
E2 = Estudiante1 %>%  separate(separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&"))%>%
separate("Estudiante",c("Nombre","Apellido"),sep=" ")%>% unite(Grupo_tema,7:8,sep = "_")
Exportacion2$Taller1 = as.numeric(Exportacion2$Taller1)
E2 <- Estudiantes1  %>% separate("Taller1&Taller2", c("Taller1","Taller2"),sep="&")%>%
separate("Estudiante", c("Nombre","Apellido"),sep=" ") %>%
unite(Grupo_tema,7:8,sep = "_") %>%
mutate(Taller1 = as.numeric(Taller1),
Taller2 = as.numeric(Taller2))
str(E2)
library(dplyr)
library(gapminder)
install.packages("gapminder")
gapminder
gapminder
gapminder
library(gapminder)
Data1 = gapminder
Data1 %>% filter(country == "colombia")
Data1 %>% filter(country == "colombia")
Data1
Data1 %>% filter(country == "colombia")
#Paises con esperanza de vida entre 30 y 50 aÃ±os
Data1 %>% filter(lifeExp >= 30, lifeExp <= 50)
#Paises con esperanza de vida entre 30 y 50 aÃ±os
Data1 %>% filter(lifeExp >= 30, lifeExp <= 50, country == "colombia")
Data1 %>% filter(lifeExp >= 70 & continent == "Europe")
Data1 %>% filter(lifeExp <= 75 & (continent = "Africa" | continent == "Asia" ) )
Data1 %>% filter(lifeExp <= 75 & continent %in% c("Africa","Asia"))
Data1 %>% filter(lifeExp <= 75 & (continent = "Africa" | continent == "Asia" ) )
Data1 %>% filter(lifeExp >= 75 & (continent = "Africa" | continent == "Asia" ) )
Data1 %>% filter(lifeExp >= 75 & continent %in% c("Africa","Asia"))
Data1 %>% filter(lifeExp >= 75 & (continent == "Africa" | continent == "Asia" ) )
Data1 %>% slice(c(30:42))
Data1 %>% top_n(-1,pop)
Data1 %>% arrange(des(lifeExp))
Data1 %>% arrange(continent)
Data1 %>% arrange(desc(continent))
Data1 %>% select(year, lifeExp)
Data1 %>% select(pop) %>%
rename(poblacion = pop)
Data1 %>% select(pop) %>%
rename(poblacion = pop)
arrange(poblacion)
Data1 %>% select(pop) %>%
rename(poblacion = pop)%>%
arrange(poblacion)
Data %>% select(continent)
Data %>% select(continent,everything())
Data1 %>% select(continent,everything())
Data1 %>% mutate(GDP = pop*gdpPercap)
Data1
